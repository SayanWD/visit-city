
services:
  db:
    image: postgres:16
    container_name: visit-city-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER:-user}
      POSTGRES_PASSWORD: ${DB_PASS:-pass}
      POSTGRES_DB: ${DB_NAME:-visitcity}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - backend-net

  redis:
    image: redis:7-alpine
    container_name: visit-city-redis
    restart: unless-stopped
    command: ["redis-server","--appendonly","yes"]
    volumes:
      - redis_data:/data
    networks:
      - backend-net

  backend:
    build:
      context: ./src/backend    # ← здесь теперь правильный контекст
      dockerfile: Dockerfile
    container_name: visit-city-backend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${PORT:-4000}:4000"
    depends_on:
      - db
      - redis
    networks:
      - backend-net

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: visit-city-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge

volumes:
  db_data:
  redis_data:
